{"ast":null,"code":"var _jsxFileName = \"/Users/naseebafaiza/Desktop/Playlister_HW3/Playlister_HW3/client/src/components/EditToolbar.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\nimport jsTPS from '../common/jsTPS';\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditToolbar() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  let enabledButtonClass = \"playlister-button\";\n  let tps = new jsTPS();\n  let undoClass = enabledButtonClass;\n  let redoClass = enabledButtonClass;\n  let addSongClass = enabledButtonClass;\n  let closeClass = enabledButtonClass;\n  if (!store.canUndo) {\n    undoClass += \"-disabled\";\n  }\n  if (!store.canRedo) {\n    redoClass += \"-disabled\";\n  }\n  if (store.currentList === null) {\n    addSongClass += \"-disabled\";\n  }\n  if (store.currentList === null) {\n    closeClass += \"-disabled\";\n  }\n  function handleUndo() {\n    store.undo();\n  }\n  function handleRedo() {\n    store.redo();\n  }\n  function handleAddSong() {\n    store.addAddSongTransaction();\n  }\n  function handleClose() {\n    history.push(\"/\");\n    store.closeCurrentList();\n  }\n  let editStatus = false;\n  if (store.isListNameEditActive) {\n    editStatus = true;\n  }\n  if (!store.currentList) {\n    editStatus = true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"add-song-button\",\n      disabled: editStatus,\n      value: \"+\",\n      className: addSongClass,\n      onClick: handleAddSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"undo-button\",\n      disabled: editStatus,\n      value: \"\\u27F2\",\n      className: undoClass,\n      onClick: handleUndo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"redo-button\",\n      disabled: editStatus,\n      value: \"\\u27F3\",\n      className: redoClass,\n      onClick: handleRedo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"close-button\",\n      disabled: editStatus,\n      value: \"\\u2715\",\n      className: closeClass,\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(EditToolbar, \"3pru+SYrs14w+1LSVfrX0yDmdFE=\", false, function () {\n  return [useHistory];\n});\n_c = EditToolbar;\nexport default EditToolbar;\n\n// version control tests\nvar _c;\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"names":["useContext","GlobalStoreContext","useHistory","jsTPS","EditToolbar","store","history","enabledButtonClass","tps","undoClass","redoClass","addSongClass","closeClass","canUndo","canRedo","currentList","handleUndo","undo","handleRedo","redo","handleAddSong","addAddSongTransaction","handleClose","push","closeCurrentList","editStatus","isListNameEditActive"],"sources":["/Users/naseebafaiza/Desktop/Playlister_HW3/Playlister_HW3/client/src/components/EditToolbar.js"],"sourcesContent":["import { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport { useHistory } from 'react-router-dom'\nimport jsTPS from '../common/jsTPS';\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nfunction EditToolbar() {\n    const { store } = useContext(GlobalStoreContext);\n    const history = useHistory();\n    let enabledButtonClass = \"playlister-button\";\n    let tps=new jsTPS();\n\n    let undoClass=enabledButtonClass\n    let redoClass=enabledButtonClass\n    let addSongClass=enabledButtonClass\n    let closeClass=enabledButtonClass\n\n    if(!store.canUndo){\n        undoClass += \"-disabled\";\n    }\n    if(!store.canRedo){\n        redoClass += \"-disabled\";\n    }\n    if(store.currentList===null){\n        addSongClass += \"-disabled\";\n    }\n    if(store.currentList===null){\n        closeClass += \"-disabled\";\n    }\n\n    function handleUndo() {\n        store.undo();\n    }\n    function handleRedo() {\n        store.redo();\n    }\n    function handleAddSong(){\n        store.addAddSongTransaction();\n    }\n    function handleClose() {\n        history.push(\"/\");\n        store.closeCurrentList();\n    }\n    let editStatus = false;\n    if (store.isListNameEditActive) {\n        editStatus = true;\n    }\n    if(!(store.currentList)){\n        editStatus = true;\n    }\n    return (\n        <span id=\"edit-toolbar\">\n            <input\n                type=\"button\"\n                id='add-song-button'\n                disabled={editStatus}\n                value=\"+\"\n                className={addSongClass}\n                onClick={handleAddSong}\n            />\n            <input\n                type=\"button\"\n                id='undo-button'\n                disabled={editStatus}\n                value=\"⟲\"\n                className={undoClass}\n                onClick={handleUndo}\n            />\n            <input\n                type=\"button\"\n                id='redo-button'\n                disabled={editStatus}\n                value=\"⟳\"\n                className={redoClass}\n                onClick={handleRedo}\n            />\n            <input\n                type=\"button\"\n                id='close-button'\n                disabled={editStatus}\n                value=\"&#x2715;\"\n                className={closeClass}\n                onClick={handleClose}\n            />\n        </span>);\n}\n\nexport default EditToolbar;\n\n// version control tests"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,kBAAkB,QAAQ,UAAU;AAC7C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AALA;AAMA,SAASC,WAAW,GAAG;EAAA;EACnB,MAAM;IAAEC;EAAM,CAAC,GAAGL,UAAU,CAACC,kBAAkB,CAAC;EAChD,MAAMK,OAAO,GAAGJ,UAAU,EAAE;EAC5B,IAAIK,kBAAkB,GAAG,mBAAmB;EAC5C,IAAIC,GAAG,GAAC,IAAIL,KAAK,EAAE;EAEnB,IAAIM,SAAS,GAACF,kBAAkB;EAChC,IAAIG,SAAS,GAACH,kBAAkB;EAChC,IAAII,YAAY,GAACJ,kBAAkB;EACnC,IAAIK,UAAU,GAACL,kBAAkB;EAEjC,IAAG,CAACF,KAAK,CAACQ,OAAO,EAAC;IACdJ,SAAS,IAAI,WAAW;EAC5B;EACA,IAAG,CAACJ,KAAK,CAACS,OAAO,EAAC;IACdJ,SAAS,IAAI,WAAW;EAC5B;EACA,IAAGL,KAAK,CAACU,WAAW,KAAG,IAAI,EAAC;IACxBJ,YAAY,IAAI,WAAW;EAC/B;EACA,IAAGN,KAAK,CAACU,WAAW,KAAG,IAAI,EAAC;IACxBH,UAAU,IAAI,WAAW;EAC7B;EAEA,SAASI,UAAU,GAAG;IAClBX,KAAK,CAACY,IAAI,EAAE;EAChB;EACA,SAASC,UAAU,GAAG;IAClBb,KAAK,CAACc,IAAI,EAAE;EAChB;EACA,SAASC,aAAa,GAAE;IACpBf,KAAK,CAACgB,qBAAqB,EAAE;EACjC;EACA,SAASC,WAAW,GAAG;IACnBhB,OAAO,CAACiB,IAAI,CAAC,GAAG,CAAC;IACjBlB,KAAK,CAACmB,gBAAgB,EAAE;EAC5B;EACA,IAAIC,UAAU,GAAG,KAAK;EACtB,IAAIpB,KAAK,CAACqB,oBAAoB,EAAE;IAC5BD,UAAU,GAAG,IAAI;EACrB;EACA,IAAG,CAAEpB,KAAK,CAACU,WAAY,EAAC;IACpBU,UAAU,GAAG,IAAI;EACrB;EACA,oBACI;IAAM,EAAE,EAAC,cAAc;IAAA,wBACnB;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,iBAAiB;MACpB,QAAQ,EAAEA,UAAW;MACrB,KAAK,EAAC,GAAG;MACT,SAAS,EAAEd,YAAa;MACxB,OAAO,EAAES;IAAc;MAAA;MAAA;MAAA;IAAA,QACzB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAEK,UAAW;MACrB,KAAK,EAAC,QAAG;MACT,SAAS,EAAEhB,SAAU;MACrB,OAAO,EAAEO;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAES,UAAW;MACrB,KAAK,EAAC,QAAG;MACT,SAAS,EAAEf,SAAU;MACrB,OAAO,EAAEQ;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,cAAc;MACjB,QAAQ,EAAEO,UAAW;MACrB,KAAK,EAAC,QAAU;MAChB,SAAS,EAAEb,UAAW;MACtB,OAAO,EAAEU;IAAY;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AACf;AAAC,GA/EQlB,WAAW;EAAA,QAEAF,UAAU;AAAA;AAAA,KAFrBE,WAAW;AAiFpB,eAAeA,WAAW;;AAE1B;AAAA;AAAA"},"metadata":{},"sourceType":"module"}