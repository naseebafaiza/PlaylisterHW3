{"ast":null,"code":"var _jsxFileName = \"/Users/naseebafaiza/Desktop/Playlister_HW3/Playlister_HW3/client/src/components/ListCard.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { GlobalStoreContext } from '../store';\n/*\n    This is a card in our list of playlists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListCard(props) {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [text, setText] = useState(\"\");\n  store.history = useHistory();\n  const {\n    idNamePair,\n    selected\n  } = props;\n  function handleDeleteList(event) {\n    store.deleteList(props.idNamePair._id);\n  }\n  function handleLoadList(event) {\n    if (!event.target.disabled) {\n      let _id = event.target.id;\n      if (_id.indexOf('list-card-text-') >= 0) _id = (\"\" + _id).substring(\"list-card-text-\".length);else if (_id.indexOf('delete-list-') >= 0) {\n        _id = (\"\" + _id).substring(\"delete-list-\".length);\n      }\n      // CHANGE THE CURRENT LIST\n      store.setCurrentList(_id);\n    }\n  }\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n  function toggleEdit() {\n    let newActive = !editActive;\n    if (newActive) {\n      store.setIsListNameEditActive();\n    }\n    setEditActive(newActive);\n  }\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      store.changeListName(id, text);\n      toggleEdit();\n    }\n  }\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n  let selectClass = \"unselected-list-card\";\n  if (selected) {\n    selectClass = \"selected-list-card\";\n  }\n  let cardStatus = false;\n  if (store.isListNameEditActive) {\n    cardStatus = true;\n  }\n  let cardElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: idNamePair._id,\n    onClick: handleLoadList,\n    className: 'list-card ' + selectClass,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"list-card-text-\" + idNamePair._id,\n      className: \"list-card-text\",\n      children: idNamePair.name\n    }, \"span-\" + idNamePair._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: cardStatus,\n      type: \"button\",\n      id: \"delete-list-\" + idNamePair._id,\n      className: \"list-card-button\",\n      value: \"\\u2715\",\n      onClick: handleDeleteList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: cardStatus,\n      type: \"button\",\n      id: \"edit-list-\" + idNamePair._id,\n      className: \"list-card-button\",\n      onClick: handleToggleEdit,\n      value: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, idNamePair._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n  if (editActive) {\n    cardElement = /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"list-\" + idNamePair._id,\n      className: \"list-card\",\n      type: \"text\",\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText,\n      defaultValue: idNamePair.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n  return cardElement;\n}\n_s(ListCard, \"fZ+dbcmrsEXJMahJiSuaIEnEUfk=\", false, function () {\n  return [useHistory];\n});\n_c = ListCard;\nexport default ListCard;\nvar _c;\n$RefreshReg$(_c, \"ListCard\");","map":{"version":3,"names":["useContext","useState","useHistory","GlobalStoreContext","ListCard","props","store","editActive","setEditActive","text","setText","history","idNamePair","selected","handleDeleteList","event","deleteList","_id","handleLoadList","target","disabled","id","indexOf","substring","length","setCurrentList","handleToggleEdit","stopPropagation","toggleEdit","newActive","setIsListNameEditActive","handleKeyPress","code","changeListName","handleUpdateText","value","selectClass","cardStatus","isListNameEditActive","cardElement","name"],"sources":["/Users/naseebafaiza/Desktop/Playlister_HW3/Playlister_HW3/client/src/components/ListCard.js"],"sourcesContent":["import { useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { GlobalStoreContext } from '../store'\n/*\n    This is a card in our list of playlists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\nfunction ListCard(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [ editActive, setEditActive ] = useState(false);\n    const [ text, setText ] = useState(\"\");\n    store.history = useHistory();\n    const { idNamePair, selected } = props;\n\n    function handleDeleteList(event) {\n        store.deleteList(props.idNamePair._id);\n    }\n\n    function handleLoadList(event) {\n        if (!event.target.disabled) {\n            let _id = event.target.id;\n            if (_id.indexOf('list-card-text-') >= 0)\n                _id = (\"\" + _id).substring(\"list-card-text-\".length);\n            else if(_id.indexOf('delete-list-')>=0){\n                _id = (\"\" + _id).substring(\"delete-list-\".length);\n            }\n            // CHANGE THE CURRENT LIST\n            store.setCurrentList(_id);\n        }\n    }\n\n    function handleToggleEdit(event) {\n        event.stopPropagation();\n        toggleEdit();\n    }\n\n    function toggleEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsListNameEditActive();\n        }\n        setEditActive(newActive);\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            let id = event.target.id.substring(\"list-\".length);\n            store.changeListName(id, text);\n            toggleEdit();\n        }\n    }\n    function handleUpdateText(event) {\n        setText(event.target.value );\n    }\n\n    let selectClass = \"unselected-list-card\";\n    if (selected) {\n        selectClass = \"selected-list-card\";\n    }\n    let cardStatus = false;\n    if (store.isListNameEditActive) {\n        cardStatus = true;\n    }\n    let cardElement =\n        <div\n            id={idNamePair._id}\n            key={idNamePair._id}\n            onClick={handleLoadList}\n            className={'list-card ' + selectClass}>\n            <span\n                id={\"list-card-text-\" + idNamePair._id}\n                key={\"span-\" + idNamePair._id}\n                className=\"list-card-text\">\n                {idNamePair.name}\n            </span>\n            <input\n                disabled={cardStatus}\n                type=\"button\"\n                id={\"delete-list-\" + idNamePair._id}\n                className=\"list-card-button\"\n                value={\"\\u2715\"}\n                onClick ={handleDeleteList}\n            />\n            <input\n                disabled={cardStatus}\n                type=\"button\"\n                id={\"edit-list-\" + idNamePair._id}\n                className=\"list-card-button\"\n                onClick={handleToggleEdit}\n                value={\"\\u270E\"}\n            />\n        </div>;\n\n    if (editActive) {\n        cardElement =\n            <input\n                id={\"list-\" + idNamePair._id}\n                className='list-card'\n                type='text'\n                onKeyPress={handleKeyPress}\n                onChange={handleUpdateText}\n                defaultValue={idNamePair.name}\n            />;\n    }\n    return (\n        cardElement\n    );\n}\n\nexport default ListCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}