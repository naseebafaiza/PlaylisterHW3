{"ast":null,"code":"var _jsxFileName = \"/Users/naseebafaiza/Desktop/Playlister_HW3/Playlister_HW3/client/src/components/EditToolbar.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditToolbar() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  let enabledButtonClass = \"playlister-button\";\n  let closable = true;\n  let addable = true;\n  let currList = store.currentList;\n  let undoable = store.undoable();\n  let redoable = store.redoable();\n  if (currList === null) {\n    closable = false;\n    addable = false;\n  }\n  function handleUndo() {\n    store.undo();\n  }\n  function handleRedo() {\n    store.redo();\n  }\n  function handleAddSong() {\n    store.addAddSongTransaction();\n  }\n  function handleClose() {\n    history.push(\"/\");\n    store.closeCurrentList();\n  }\n  let editStatus = false;\n  if (store.isListNameEditActive) {\n    editStatus = true;\n  }\n  if (store.modalOpen) {\n    addable = false;\n    closable = false;\n    redoable = false;\n    undoable = false;\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"add-song-button\",\n      disabled: !addable,\n      value: \"+\",\n      className: enabledButtonClass,\n      onClick: handleAddSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"undo-button\",\n      disabled: !undoable,\n      value: \"\\u27F2\",\n      className: enabledButtonClass,\n      onClick: handleUndo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"redo-button\",\n      disabled: !redoable,\n      value: \"\\u27F3\",\n      className: enabledButtonClass,\n      onClick: handleRedo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"close-button\",\n      disabled: !closable,\n      value: \"\\u2715\",\n      className: enabledButtonClass,\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(EditToolbar, \"3pru+SYrs14w+1LSVfrX0yDmdFE=\", false, function () {\n  return [useHistory];\n});\n_c = EditToolbar;\nexport default EditToolbar;\n\n// version control tests\nvar _c;\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"names":["useContext","GlobalStoreContext","useHistory","EditToolbar","store","history","enabledButtonClass","closable","addable","currList","currentList","undoable","redoable","handleUndo","undo","handleRedo","redo","handleAddSong","addAddSongTransaction","handleClose","push","closeCurrentList","editStatus","isListNameEditActive","modalOpen"],"sources":["/Users/naseebafaiza/Desktop/Playlister_HW3/Playlister_HW3/client/src/components/EditToolbar.js"],"sourcesContent":["import { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport { useHistory } from 'react-router-dom'\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nfunction EditToolbar() {\n    const { store } = useContext(GlobalStoreContext);\n    const history = useHistory();\n\n    let enabledButtonClass = \"playlister-button\";\n    let closable = true;\n    let addable = true;\n    let currList = store.currentList;\n    let undoable = store.undoable();\n    let redoable = store.redoable();\n    if(currList === null){\n        closable = false;\n        addable = false;\n    }\n\n    function handleUndo() {\n        store.undo();\n    }\n    function handleRedo() {\n        store.redo();\n    }\n    function handleAddSong(){\n        store.addAddSongTransaction();\n    }\n    function handleClose() {\n        history.push(\"/\");\n        store.closeCurrentList();\n    }\n    let editStatus = false;\n    if (store.isListNameEditActive) {\n        editStatus = true;\n    }\n    if(store.modalOpen){\n        addable = false;\n        closable = false;\n        redoable = false;\n        undoable = false;\n    }\n    return (\n        <span id=\"edit-toolbar\">\n            <input\n                type=\"button\"\n                id='add-song-button'\n                disabled={!addable}\n                value=\"+\"\n                className={enabledButtonClass}\n                onClick={handleAddSong}\n            />\n            <input\n                type=\"button\"\n                id='undo-button'\n                disabled={!undoable}\n                value=\"⟲\"\n                className={enabledButtonClass}\n                onClick={handleUndo}\n            />\n            <input\n                type=\"button\"\n                id='redo-button'\n                disabled={!redoable}\n                value=\"⟳\"\n                className={enabledButtonClass}\n                onClick={handleRedo}\n            />\n            <input\n                type=\"button\"\n                id='close-button'\n                disabled={!closable}\n                value=\"&#x2715;\"\n                className={enabledButtonClass}\n                onClick={handleClose}\n            />\n        </span>);\n}\n\nexport default EditToolbar;\n\n// version control tests"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,kBAAkB,QAAQ,UAAU;AAC7C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AALA;AAMA,SAASC,WAAW,GAAG;EAAA;EACnB,MAAM;IAAEC;EAAM,CAAC,GAAGJ,UAAU,CAACC,kBAAkB,CAAC;EAChD,MAAMI,OAAO,GAAGH,UAAU,EAAE;EAE5B,IAAII,kBAAkB,GAAG,mBAAmB;EAC5C,IAAIC,QAAQ,GAAG,IAAI;EACnB,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,QAAQ,GAAGL,KAAK,CAACM,WAAW;EAChC,IAAIC,QAAQ,GAAGP,KAAK,CAACO,QAAQ,EAAE;EAC/B,IAAIC,QAAQ,GAAGR,KAAK,CAACQ,QAAQ,EAAE;EAC/B,IAAGH,QAAQ,KAAK,IAAI,EAAC;IACjBF,QAAQ,GAAG,KAAK;IAChBC,OAAO,GAAG,KAAK;EACnB;EAEA,SAASK,UAAU,GAAG;IAClBT,KAAK,CAACU,IAAI,EAAE;EAChB;EACA,SAASC,UAAU,GAAG;IAClBX,KAAK,CAACY,IAAI,EAAE;EAChB;EACA,SAASC,aAAa,GAAE;IACpBb,KAAK,CAACc,qBAAqB,EAAE;EACjC;EACA,SAASC,WAAW,GAAG;IACnBd,OAAO,CAACe,IAAI,CAAC,GAAG,CAAC;IACjBhB,KAAK,CAACiB,gBAAgB,EAAE;EAC5B;EACA,IAAIC,UAAU,GAAG,KAAK;EACtB,IAAIlB,KAAK,CAACmB,oBAAoB,EAAE;IAC5BD,UAAU,GAAG,IAAI;EACrB;EACA,IAAGlB,KAAK,CAACoB,SAAS,EAAC;IACfhB,OAAO,GAAG,KAAK;IACfD,QAAQ,GAAG,KAAK;IAChBK,QAAQ,GAAG,KAAK;IAChBD,QAAQ,GAAG,KAAK;EACpB;EACA,oBACI;IAAM,EAAE,EAAC,cAAc;IAAA,wBACnB;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,iBAAiB;MACpB,QAAQ,EAAE,CAACH,OAAQ;MACnB,KAAK,EAAC,GAAG;MACT,SAAS,EAAEF,kBAAmB;MAC9B,OAAO,EAAEW;IAAc;MAAA;MAAA;MAAA;IAAA,QACzB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAE,CAACN,QAAS;MACpB,KAAK,EAAC,QAAG;MACT,SAAS,EAAEL,kBAAmB;MAC9B,OAAO,EAAEO;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAE,CAACD,QAAS;MACpB,KAAK,EAAC,QAAG;MACT,SAAS,EAAEN,kBAAmB;MAC9B,OAAO,EAAES;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,cAAc;MACjB,QAAQ,EAAE,CAACR,QAAS;MACpB,KAAK,EAAC,QAAU;MAChB,SAAS,EAAED,kBAAmB;MAC9B,OAAO,EAAEa;IAAY;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AACf;AAAC,GAzEQhB,WAAW;EAAA,QAEAD,UAAU;AAAA;AAAA,KAFrBC,WAAW;AA2EpB,eAAeA,WAAW;;AAE1B;AAAA;AAAA"},"metadata":{},"sourceType":"module"}